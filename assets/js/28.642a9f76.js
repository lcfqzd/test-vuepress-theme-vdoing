(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{344:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"碰撞检测"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#碰撞检测"}},[s._v("#")]),s._v(" 碰撞检测")]),s._v(" "),t("h2",{attrs:{id:"目标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[s._v("#")]),s._v(" 目标")]),s._v(" "),t("ul",[t("li",[s._v("了解碰撞检测方法")]),s._v(" "),t("li",[s._v("碰撞实现")])]),s._v(" "),t("h2",{attrs:{id:"_01-了解碰撞检测方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_01-了解碰撞检测方法"}},[s._v("#")]),s._v(" 01. 了解碰撞检测方法")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("pygame")]),s._v(" 提供了 "),t("strong",[s._v("两个非常方便")]),s._v(" 的方法可以实现碰撞检测：")])]),s._v(" "),t("h3",{attrs:{id:"pygame-sprite-groupcollide"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pygame-sprite-groupcollide"}},[s._v("#")]),s._v(" pygame.sprite.groupcollide()")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("两个精灵组")]),s._v(" 中 "),t("strong",[s._v("所有的精灵")]),s._v(" 的碰撞检测")])]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[s._v("groupcollide"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("group1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" group2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" dokill1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" dokill2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" collided "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Sprite_dict\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("如果将 "),t("code",[s._v("dokill")]),s._v(" 设置为 "),t("code",[s._v("True")]),s._v("，则 "),t("strong",[s._v("发生碰撞的精灵将被自动移除")])]),s._v(" "),t("li",[t("code",[s._v("collided")]),s._v(" 参数是用于 "),t("strong",[s._v("计算碰撞的回调函数")]),s._v(" "),t("ul",[t("li",[s._v("如果没有指定，则每个精灵必须有一个 "),t("code",[s._v("rect")]),s._v(" 属性")])])])]),s._v(" "),t("h3",{attrs:{id:"pygame-sprite-spritecollide"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pygame-sprite-spritecollide"}},[s._v("#")]),s._v(" pygame.sprite.spritecollide()")]),s._v(" "),t("ul",[t("li",[s._v("判断 "),t("strong",[s._v("某个精灵")]),s._v(" 和 "),t("strong",[s._v("指定精灵组")]),s._v(" 中的精灵的碰撞")])]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[s._v("spritecollide"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sprite"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" group"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" dokill"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" collided "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Sprite_list\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("如果将 "),t("code",[s._v("dokill")]),s._v(" 设置为 "),t("code",[s._v("True")]),s._v("，则 "),t("strong",[s._v("指定精灵组")]),s._v(" 中 "),t("strong",[s._v("发生碰撞的精灵将被自动移除")])]),s._v(" "),t("li",[t("code",[s._v("collided")]),s._v(" 参数是用于 "),t("strong",[s._v("计算碰撞的回调函数")]),s._v(" "),t("ul",[t("li",[s._v("如果没有指定，则每个精灵必须有一个 "),t("code",[s._v("rect")]),s._v(" 属性")])])]),s._v(" "),t("li",[s._v("返回 "),t("strong",[s._v("精灵组")]),s._v(" 中跟 "),t("strong",[s._v("精灵")]),s._v(" 发生碰撞的 "),t("strong",[s._v("精灵列表")])])]),s._v(" "),t("h2",{attrs:{id:"_02-碰撞实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_02-碰撞实现"}},[s._v("#")]),s._v(" 02. 碰撞实现")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__check_collide")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. 子弹摧毁敌机")]),s._v("\n    pygame"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sprite"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("groupcollide"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hero"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bullets"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("enemy_group"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. 敌机撞毁英雄")]),s._v("\n    enemies "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" pygame"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sprite"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("spritecollide"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hero"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("enemy_group"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断列表时候有内容")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("enemies"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    \n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 让英雄牺牲")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hero"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("kill"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        \n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 结束游戏")]),s._v("\n        PlaneGame"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__game_over"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);